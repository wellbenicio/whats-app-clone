{"version":3,"sources":["Components/messages.js","App.js","reportWebVitals.js","index.js"],"names":["MessagesDiv","styled","div","Div","P","p","Messages","messages","map","index","user","message","MainColumn","NameDiv","input","MessageDiv","ButtonDiv","button","App","useState","setMessages","setUser","setMessage","type","placeholder","onChange","e","target","value","onClick","getMessages","important","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAGMA,EAAcC,IAAOC,IAAV,sDAKXC,EAAMF,IAAOC,IAAV,gDAGHE,EAAIH,IAAOI,EAAV,oDAiBQC,I,UAAAA,EAbb,YAA+B,IAAXC,EAAU,EAAVA,SAChB,OACI,cAACP,EAAD,UACKO,EAASC,KAAI,SAACC,GAAD,OACd,eAACN,EAAD,WACE,cAACC,EAAD,UAAIK,EAAMC,OACV,mCAAMD,EAAME,oBCjBtBC,EAAaX,IAAOC,IAAV,sMAWVC,EAAMF,IAAOC,IAAV,4CAIHW,EAAUZ,IAAOa,MAAV,2CAIPC,EAAad,IAAOa,MAAV,2CAGVE,EAAYf,IAAOgB,OAAV,2CA+CAC,MA1Cf,WACE,MAAgCC,mBAAU,IAA1C,mBAAOZ,EAAP,KAAiBa,EAAjB,KACA,EAAwBD,mBAAU,IAAlC,mBAAOT,EAAP,KAAaW,EAAb,KACA,EAA8BF,mBAAU,IAAxC,mBAAOR,EAAP,KAAgBW,EAAhB,KAkBE,OAAO,eAACV,EAAD,WACL,cAAC,EAAD,CAAUL,SAAUA,IACd,eAAC,EAAD,WACA,cAACM,EAAD,CACIU,KAAK,OACLC,YAAY,aACZC,SAAU,SAACC,GAAOL,EAAQK,EAAEC,OAAOC,QACnCA,MAAOlB,IAEX,cAACK,EAAD,CACIQ,KAAK,OACLC,YAAY,WACZC,SAAU,SAACC,GAAOJ,EAAWI,EAAEC,OAAOC,QACtCA,MAAOjB,IAEX,cAACK,EAAD,CAAWa,QA/BrB,WACE,IAAMC,EAAc,CAClBpB,KAAMA,EACNC,QAASA,GAGLoB,EAAS,sBAAOxB,GAAP,CAAiBuB,IAChCV,EAAYW,GAEZV,EAAS,IACTC,EAAY,IAEZU,QAAQC,IAAItB,GACZqB,QAAQC,IAAI1B,GACZyB,QAAQC,IAAIH,IAiBJ,2BCvDGI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5576c19e.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst MessagesDiv = styled.div`\n    padding: 5px 20px;\n\n`\n\nconst Div = styled.div`\n    display: flex;\n`\nconst P = styled.p`\n    font-weight: bold;\n`\n\n  function Messages ({messages}){\n      return (\n          <MessagesDiv>\n              {messages.map((index) => (\n              <Div>\n                <P>{index.user}</P>\n                <p>: {index.message}</p>\n              </Div>\n            ))}\n          </MessagesDiv>\n      ) \n}\n\nexport default Messages;\n","import React,{useState} from \"react\";\nimport styled from \"styled-components\";\nimport Messages from \"./Components/messages\";\n\nconst MainColumn = styled.div`\n  flex: 1 1 0%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  border: 1px solid black;\n  width: 31%;\n  height: 100vh;\n  margin: auto;\n`\n\nconst Div = styled.div`\ndisplay: flex;\n`\n\nconst NameDiv = styled.input`\n  width: 20%;\n`\n\nconst MessageDiv = styled.input`\n  width: 70%;\n`\nconst ButtonDiv = styled.button`\n  width: 30%;\n`\n\n\nfunction App() {\n  const [messages, setMessages] = useState ([])\n  const [user, setUser] = useState (\"\")\n  const [message, setMessage] = useState (\"\")\n\n  function sendMessages (){\n    const getMessages = {\n      user: user,\n      message: message\n    }\n\n    const important = [...messages, getMessages]\n    setMessages(important)\n\n    setUser (\"\")\n    setMessage (\"\")\n\n    console.log(message)\n    console.log(messages)\n    console.log(getMessages)\n  }\n    return <MainColumn>\n      <Messages messages={messages}/>\n            <Div>\n            <NameDiv \n                type=\"text\" \n                placeholder=\"UsuÃ¡rio\" \n                onChange={(e) => {setUser(e.target.value)}} \n                value={user}\n            />\n            <MessageDiv \n                type=\"text\" \n                placeholder=\"Mensagem\" \n                onChange={(e) => {setMessage(e.target.value)}} \n                value={message}\n            />\n            <ButtonDiv onClick={sendMessages}>Enviar</ButtonDiv>\n        </Div>  \n        </MainColumn>\n        }\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}